name: üõ†Ô∏è Build OpenWRT Bpi-R4 snapshot

on:
  workflow_dispatch:

env:
  REMOTE_REPOSITORY: openwrt/openwrt
  REMOTE_BRANCH: main
  RELEASE_PREFIX: bpi-r4
  DEVICE_CONFIG: configs/bpi-r4_config

jobs:
  check_commits:
    name: üîç Check Commits
    runs-on: ubuntu-24.04
    outputs:
      latest_commit_sha: ${{ steps.get_sha.outputs.latest_commit_sha }}
    steps:
      - name: üì• Checkout remote repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}

      - name: üî¢ Get the latest commit SHA
        id: get_sha
        run: echo "latest_commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  build:
    name: üèóÔ∏è Build BPI-R4
    needs: [check_commits]
    runs-on: ubuntu-24.04
    steps:
      - name: üîß Set up environment
        run: echo "IMAGE_TIMESTAMP=$(date +'%Y_%m_%d_%H_%M_%S')" >> $GITHUB_ENV

      - name: üíª Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync swig unzip zlib1g-dev file wget curl
          sudo apt full-upgrade -y

      - name: üì• Checkout remote repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}

      - name: üîç Get OpenWRT revision
        id: get_openwrt_rev
        run: |
          chmod +x ./scripts/getver.sh
          REV=$(./scripts/getver.sh)
          if [ -z "$REV" ]; then
            echo "Error: OpenWRT revision is empty"
            exit 1
          fi
          echo "OPENWRT_REVISION=$REV" >> $GITHUB_ENV
          echo "OpenWRT revision is $REV"

      - name: üîÑ Update and install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: üõ†Ô∏è Configure firmware image
        run: |
          curl -SL "https://raw.githubusercontent.com/${{ github.repository_owner }}/Bpi-r4-OpenWRT-Build/master/${{ env.DEVICE_CONFIG }}" > .config
          make defconfig

      - name: ‚öôÔ∏è Add custom configuration
        run: |
          mkdir -p files/sbin files/etc/profile.d files/etc/uci-defaults
          # Pobierz pliki konfiguracyjne z retries
          wget --tries=3 --timeout=30 --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://raw.githubusercontent.com/${{ github.repository_owner }}/OpenWRT_packages/master/sysinfo/files/sbin/sysinfo.sh" \
            -O files/sbin/sysinfo.sh || exit 1
          wget --tries=3 --timeout=30 --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://raw.githubusercontent.com/${{ github.repository_owner }}/OpenWRT_packages/master/sysinfo/files/etc/profile.d/99-sysinfo.sh" \
            -O files/etc/profile.d/99-sysinfo.sh || exit 1
          chmod +x files/sbin/sysinfo.sh
          # Konfiguracja UCI
          cat > files/etc/uci-defaults/99-custom-config << 'EOF'
          uci set wireless.radio0.disabled=0
          uci commit
          /etc/init.d/dnscrypt-proxy enable
          /etc/init.d/dnscrypt-proxy restart
          /etc/init.d/adblock restart
          EOF

      - name: üßπ Optimize build configuration
        run: |
          grep "=m" .config | grep -v 'CONFIG_PACKAGE_libustream-mbedtls=m' | \
          while read -r line; do
            module=$(echo "$line" | cut -f1 -d'=')
            sed -i "s/^$line$/# $module is not set/" .config
          done

      - name: üì¶ Download dependencies
        run: make -j $(nproc) download || exit 1

      - name: üè≠ Build the firmware image
        run: |
          make -j $(nproc) world > build.log 2>&1 || (cat build.log && exit 1)

      - name: üè∑Ô∏è Rename firmware image
        run: |
          ORIGINAL_IMAGE=$(find bin/targets/mediatek/filogic -name 'openwrt-mediatek-filogic-bananapi_bpi-r4-squashfs-sysupgrade.itb')
          if [ -z "$ORIGINAL_IMAGE" ]; then
            echo "Error: Firmware image not found"
            exit 1
          fi
          NEW_IMAGE="bin/targets/mediatek/filogic/openwrt-mediatek-filogic-bananapi_bpi-r4_${OPENWRT_REVISION}_${IMAGE_TIMESTAMP}-squashfs-sysupgrade.itb"
          mv "$ORIGINAL_IMAGE" "$NEW_IMAGE"

      - name: üì¶ Package output
        run: tar -cvf bpi_r4-images.tar bin/targets/mediatek/filogic

      - name: üì§ Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpi_r4-images
          path: bpi_r4-images.tar

  release:
    name: üöÄ Create release
    needs: [build, check_commits]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    steps:
      - name: ‚¨áÔ∏è Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bpi_r4-images

      - name: üóúÔ∏è Extract artifacts
        run: tar xf bpi_r4-images.tar

      - name: üìÖ Get current date
        run: echo "RELEASE_DATE=$(date +%F)" >> $GITHUB_ENV

      - name: üè∑Ô∏è Create release
        uses: softprops/action-gh-release@v1
        with:
          files: bin/targets/mediatek/filogic/*
          tag_name: ${{ env.RELEASE_PREFIX }}-${{ env.REMOTE_BRANCH }}-${{ env.RELEASE_DATE }}-${{ env.OPENWRT_REVISION }}
          name: "OpenWRT BPI-R4 - ${{ env.REMOTE_BRANCH }} - ${{ env.RELEASE_DATE }} - OpenWRT Revision: ${{ env.OPENWRT_REVISION }}"
          body: |
            Updated prebuilt images for ${{ env.RELEASE_DATE }}.
            OpenWRT Revision: ${{ env.OPENWRT_REVISION }}
            Build Commit: ${{ needs.check_commits.outputs.latest_commit_sha }}
