name: Build OpenWRT for Banana Pi R4 + release info

on:
  workflow_dispatch:

env:
  REMOTE_REPOSITORY: openwrt/openwrt
  REMOTE_BRANCH: main
  RELEASE_PREFIX: bpi-r4
  DEVICE_CONFIG: configs/bpi-r4_config

jobs:
  check_commits:
    name: Check Commits
    runs-on: ubuntu-24.04
    outputs:
      latest_commit_sha: ${{ steps.get_sha.outputs.latest_commit_sha }}
      commit_count: ${{ steps.get_sha.outputs.commit_count }}
    steps:
      - name: Checkout remote repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}
          fetch-depth: 0

      - name: Get commit info
        id: get_sha
        run: |
          echo "latest_commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "commit_count=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

  build:
    name: Build BPI-R4
    needs: [check_commits]
    runs-on: ubuntu-24.04
    env:
      REVISION: ${{ needs.check_commits.outputs.commit_count }}

    steps:
      - name: Set up environment
        run: |
          echo "IMAGE_TIMESTAMP=$(date +'%Y_%m_%d_%H_%M_%S')" >> $GITHUB_ENV
          echo "REVISION=${{ env.REVISION }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential clang flex bison g++ gawk \
            gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync swig unzip zlib1g-dev file wget curl
          sudo apt full-upgrade -y

      - name: Checkout OpenWRT
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Apply config
        run: |
          curl -SL https://raw.githubusercontent.com/${{ github.repository_owner }}/Bpi-r4-OpenWRT-Build/master/${{ env.DEVICE_CONFIG }} > .config
          make defconfig

      - name: Custom configuration
        run: |
          mkdir -p files/sbin files/etc/profile.d files/etc/uci-defaults
          wget https://raw.githubusercontent.com/mstarczewski/OpenWRT_packages/master/sysinfo/files/sbin/sysinfo.sh -P files/sbin
          chmod +x files/sbin/sysinfo.sh
          wget https://raw.githubusercontent.com/mstarczewski/OpenWRT_packages/master/sysinfo/files/etc/profile.d/99-sysinfo.sh -P files/etc/profile.d
          cat > files/etc/uci-defaults/xxx_config << EOF
          uci set wireless.radio0.disabled=0
          uci commit
          /etc/init.d/dnscrypt-proxy enable
          /etc/init.d/dnscrypt-proxy restart
          /etc/init.d/adblock restart
          EOF

      - name: Optimize config
        run: |
          grep "=m" .config | grep -v 'CONFIG_PACKAGE_libustream-mbedtls=m' | \
          while read -r line; do \
            module=$(echo "$line" | cut -f1 -d'='); \
            sed -i "s/^$line$/# $module is not set/" .config; \
          done

      - name: Download packages
        run: make -j $(nproc) download || exit 1

      - name: Build image
        run: |
          make -j $(nproc) world REVISION="${{ env.REVISION }}" > build.log 2>&1 || (cat build.log && exit 1)

      - name: Rename artifact
        run: |
          ORIGINAL_IMAGE=$(find bin/targets/mediatek/filogic -name 'openwrt-mediatek-filogic-bananapi_bpi-r4-squashfs-sysupgrade.itb')
          NEW_NAME="openwrt-mediatek-filogic-bananapi_bpi-r4_r${{ env.REVISION }}_${{ env.IMAGE_TIMESTAMP }}-squashfs-sysupgrade.itb"
          mv "$ORIGINAL_IMAGE" "bin/targets/mediatek/filogic/$NEW_NAME"

      - name: Package output
        run: tar -cvf bpi_r4-images.tar bin/targets/mediatek/filogic

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpi_r4-images
          path: bpi_r4-images.tar

  release:
    name: Create Release
    needs: [build, check_commits]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bpi_r4-images

      - name: Extract files
        run: tar xf bpi_r4-images.tar

      - name: Set release date
        run: echo "RELEASE_DATE=$(date +%F)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: bin/targets/mediatek/filogic/*
          tag_name: ${{ env.RELEASE_PREFIX }}-r${{ env.REVISION }}-${{ env.RELEASE_DATE }}
          name: OpenWRT ${{ env.RELEASE_PREFIX }} (r${{ env.REVISION }} - ${{ env.RELEASE_DATE }})
          body: |
            ### Build Details
            - **Revision:** r${{ env.REVISION }}
            - **Commit:** [${{ needs.check_commits.outputs.latest_commit_sha }}](https://github.com/${{ env.REMOTE_REPOSITORY }}/commit/${{ needs.check_commits.outputs.latest_commit_sha }})
            - **Build Date:** ${{ env.RELEASE_DATE }}

      - name: Clean old releases (optional)
        uses: dev-drprasad/delete-older-releases@master
        if: ${{ always() }}
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
