name: 🛠️ Build OpenWRT Bpi-R4 + Release

on:
  workflow_dispatch:

env:
  REMOTE_REPOSITORY: openwrt/openwrt
  REMOTE_BRANCH: main
  RELEASE_PREFIX: bpi-r4
  DEVICE_CONFIG: configs/bpi-r4_config
  BUILD_JOBS: 2
  KEEP_RELEASES: 3

jobs:
  get_revision:
    name: 🔍 Get OpenWRT Revision
    runs-on: ubuntu-24.04
    outputs:
      revision: ${{ steps.get_revision.outputs.revision }}
      commit_sha: ${{ steps.get_commit_sha.outputs.commit_sha }}
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    steps:
      - name: 🛠️ Checkout OpenWRT
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ env.REMOTE_BRANCH }}
          fetch-depth: 0
          fetch-tags: true

      - name: 🔄 Update tags
        run: git fetch --tags -f

      - name: 🔢 Get revision
        id: get_revision
        run: |
          chmod +x ./scripts/getver.sh
          REVISION=$(./scripts/getver.sh | sed 's/[^a-zA-Z0-9]/-/g')
          echo "revision=${REVISION}" >> $GITHUB_OUTPUT

      - name: 🔑 Get commit SHA
        id: get_commit_sha
        run: echo "commit_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: 🕒 Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date -u +'%Y%m%dT%H%M%SZ')" >> $GITHUB_OUTPUT

  build:
    name: 🏗️ Build Firmware
    needs: [get_revision]
    runs-on: ubuntu-24.04
    env:
      REVISION: ${{ needs.get_revision.outputs.revision }}
      TIMESTAMP: ${{ needs.get_revision.outputs.timestamp }}

    steps:
      - name: 🏷️ Rename artifacts
        run: |
          cd openwrt/bin/targets/mediatek/filogic
          
          # Zmień nazwy wszystkich plików z zachowaniem typu
          for file in *; do
            if [[ "$file" == *"bananapi_bpi-r4"* ]]; then
              # Ekstrakcja typu obrazu (np. sysupgrade, sdcard, itp.)
              image_type=$(echo "$file" | grep -oE '(sysupgrade|sdcard|recovery|snand|emmc)')
              
              new_name=$(echo "$file" | sed \
                -e "s/bananapi_bpi-r4/bananapi_bpi-r4-${REVISION}_${TIMESTAMP}/" \
                -e "s/-squashfs//" \
                -e "s/\(.*\)\./\1-${image_type}./")
              
              mv -v "$file" "$new_name"
            fi
          done

          echo "=== Final files ==="
          ls -lh

      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-images
          path: openwrt/bin/targets/mediatek/filogic/*

  release:
    name: 🚀 Create Release
    needs: [build, get_revision]
    if: needs.build.result == 'success'
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: 📥 Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: firmware-images
          path: artifacts

      - name: 🗜️ Prepare release files
        run: |
          mkdir -p release_files
          find artifacts/ -type f -exec cp -v {} release_files/ \;
          
          echo "=== Files to release ==="
          ls -lh release_files/

      - name: 🏷️ Create release
        uses: softprops/action-gh-release@v1
        with:
          files: release_files/*
          tag_name: ${{ env.RELEASE_PREFIX }}-${{ needs.get_revision.outputs.revision }}
          name: "Openwrt-bpi_r4-${{ needs.get_revision.outputs.revision }}_${{ needs.get_revision.outputs.timestamp }}"
          body: |
            ### Build Details
            - **Device:** Banana Pi R4
            - **Revision:** ${{ needs.get_revision.outputs.revision }}
            - **Build Date:** ${{ needs.get_revision.outputs.timestamp }}
            - **Commit:** [${{ needs.get_revision.outputs.commit_sha }}](https://github.com/${{ env.REMOTE_REPOSITORY }}/commit/${{ needs.get_revision.outputs.commit_sha }})

      - name: 🧹 Clean old releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: ${{ env.KEEP_RELEASES }}
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
